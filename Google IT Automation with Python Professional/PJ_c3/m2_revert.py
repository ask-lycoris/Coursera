git revert は、既存のコミットを打ち消す新しいコミットを作成するコマンドです。この操作は、プロジェクトの履歴を維持しながら、過去の変更を取り消すために使用されます。

挙動の説明
新しいコミットを作成:

git revert は、指定されたコミットの変更を元に戻す新しいコミットを作成します。
これにより、リポジトリの履歴が明確に保持され、共同作業者にも何が変更されたかが伝わります。
既存の履歴を変更しない:

git reset のように履歴を直接書き換えるわけではありません。
特に共有リポジトリでの使用に適しています。
対象コミットの変更内容のみを打ち消す:

指定したコミットの影響を元に戻しますが、後続のコミットには影響を与えません。
基本的なコマンド構文
git revert <コミットハッシュ>
  
例: 過去のコミットを打ち消すには、そのコミットのハッシュを指定します。
git revert a1b2c3d

＜挙動の例＞
現在の履歴:
A → B → C → D

最新コミットが D で、その前に C, B, A があるとします。
git revert C を実行:

コミット C の変更を元に戻す新しいコミットが作成されます。

結果的な履歴は以下のようになります:

A → B → C → D → C'
C' は、C の変更を取り消す内容を持つ新しいコミットです。

使いどころ
安全に履歴を修正したい場合:

チームで共有しているブランチや公開された履歴に対して適しています。
特定の変更のみを元に戻したい場合:

他のコミットには影響を与えず、特定のコミットの影響だけを取り除けます。
注意点
コンフリクトの可能性:

git revert 実行時に、元に戻す変更が他のコミットと競合する場合、マージコンフリクトが発生することがあります。
連続する複数のコミットを戻す場合:

複数のコミットを一括で戻したい場合は、-n オプションを使用して手動で対応することも可能です。

git revert -n <コミットハッシュ1> <コミットハッシュ2>
git commit
履歴が増える:

元に戻す新しいコミットを追加するため、履歴が増えることを理解しておく必要があります。
類似コマンドとの違い
git reset:

履歴を直接書き換えるコマンドで、共有ブランチには適しません。
変更をステージングエリアや作業ディレクトリに戻す用途に使われます。
git revert:

履歴を保持しながらコミットの影響を取り消すため、チーム作業に安全。
