I/O  stream = プログラムが情報を取得及び受信する方法

input: keyboardなどの入力機器
output: displayなどの出力機器

STDIN = standard input
STDOUT = tandart output  端末に表示されるテキストデータ
STDERR = standard error　エラーの際は、画面上に出てくる点においては同じような挙動に見えるが、実際中で起こっていることは全く異なる

なぜ異なる挙動を示すようにしてあるのか？
1. 出力の分離: 
STDOUTとSTDERRは別々のストリームであるため、プログラムの正常な出力とエラー出力を分けて処理できる。
エラーが発生した場合でも、正常な出力は影響を受けずに保持される！また、リダイレクト可能で他のプログラムを連携しやすい。
2. デバッグの容易さ: 
プログラムのデバッグやエラーハンドリングを行う際に、エラーメッセージをSTDERRに出力することで、問題を特定しやすくなる。
エラーメッセージがSTDOUTに混在していないため、出力を簡単に分析可能。

プロセス終了コード
成功 = 0
失敗 = 0 以外  ---> プログラムで発生した種類に関する追加情報を色々な番号で提供してくれる
